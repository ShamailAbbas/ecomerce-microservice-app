name: Docker Build and Push

on:
  push:
    branches:
      - main # Trigger workflow on push to the main branch

jobs:
  build-and-push:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3
        with:
          fetch-depth: 0 # Fetch full history to get the commit hash

      - name: Log in to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_HUB_USERNAME }}
          password: ${{ secrets.DOCKER_HUB_TOKEN }}

      - name: Get commit hash
        id: commit-hash
        run: |
          COMMIT_HASH=$(git rev-parse --short HEAD)
          echo "Commit hash: $COMMIT_HASH"
          echo "COMMIT_HASH=$COMMIT_HASH" >> $GITHUB_ENV

      - name: Detect changed services
        id: changed-services
        run: |
          CHANGED_SERVICES=$(git diff --name-only HEAD^ HEAD | awk -F/ '{print $2}' | grep -E '^(product-service|order-service|notification-service)$' | sort | uniq)
          echo "Changed services: $CHANGED_SERVICES"
          echo "CHANGED_SERVICES=$CHANGED_SERVICES" >> $GITHUB_ENV

      - name: Build and push Product Service
        if: contains(env.CHANGED_SERVICES, 'product-service')
        uses: docker/build-push-action@v4
        with:
          context: ./backend/product-service
          push: true
          tags: ${{ secrets.DOCKER_HUB_USERNAME }}/product-service:${{ env.COMMIT_HASH }}

      - name: Build and push Order Service
        if: contains(env.CHANGED_SERVICES, 'order-service')
        uses: docker/build-push-action@v4
        with:
          context: ./backend/order-service
          push: true
          tags: ${{ secrets.DOCKER_HUB_USERNAME }}/order-service:${{ env.COMMIT_HASH }}

      - name: Build and push Notification Service
        if: contains(env.CHANGED_SERVICES, 'notification-service')
        uses: docker/build-push-action@v4
        with:
          context: ./backend/notification-service
          push: true
          tags: ${{ secrets.DOCKER_HUB_USERNAME }}/notification-service:${{ env.COMMIT_HASH }}

      - name: Update Kubernetes manifests
        run: |
          for service in $CHANGED_SERVICES; do
            DEPLOYMENT_FILE="./backend/k8s/$service/deployment.yaml"
            if [ -f "$DEPLOYMENT_FILE" ]; then
              echo "Updating $DEPLOYMENT_FILE with new image tag"
              sed -i "s|image: ${{ secrets.DOCKER_HUB_USERNAME }}/$service:.*|image: ${{ secrets.DOCKER_HUB_USERNAME }}/$service:${{ env.COMMIT_HASH }}|g" "$DEPLOYMENT_FILE"
            else
              echo "Deployment file not found for $service: $DEPLOYMENT_FILE"
            fi
          done

      - name: Commit and push updated manifests
        run: |
          git config --global user.email "actions@github.com"
          git config --global user.name "GitHub Actions"
          git add ./backend/k8s/
          git commit -m "Update Kubernetes manifests with new image tags for commit ${{ env.COMMIT_HASH }}"
          git remote set-url origin https://${{ secrets.GITHUB_TOKEN }}@github.com/${{ github.repository }}.git
          git push origin main
